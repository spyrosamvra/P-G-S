# -*- coding: utf-8 -*-
"""Google_Sheets_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HPvZ8F720T2avWs93qp10lpn6id7MDdt

API Name : python-overflow@principal-yen-265118.iam.gserviceaccount.com

---

```
#Libraries we used in project

#-> gspread

#-> from oauth2client.service_account import ServiceAccountCredentials

#-> ftplib

#-> from cryptography.fernet import Fernet

#-> os

#-> pandas as pd
```

# Auth

## FTP Connect / Download Required Files
"""

def FTP_Download_File(filename):
  localfile = open(filename, 'wb')
  ftp.retrbinary('RETR ' + filename, localfile.write, 1024)
  localfile.close()

import ftplib
ftp = ftplib.FTP('185.27.134.11', 'epiz_24903843', '65DxQbpL3IGm')
ftp.cwd("/htdocs/FTP")
FTP_Download_File('python_tensor.json.encrypted')
FTP_Download_File('gspread.pdf')
ftp.quit()

"""## Decryptor"""

!pip install cryptography
from cryptography.fernet import Fernet
import os

key = b'NXX97XkHSSpRfD5gJL4HiaEp4AC1yaNSMU1Pa0IZQ4A='
input_file = 'python_tensor.json.encrypted'
output_file = 'python_tensor.json'

with open(input_file, 'rb') as f:
    data = f.read()

fernet = Fernet(key)
encrypted = fernet.decrypt(data)

with open(output_file, 'wb') as f:
    f.write(encrypted)
    print('Decrypt Success')

if os.path.exists("python_tensor.json"):
  os.remove("python_tensor.json.encrypted")

"""## Crendentials Verified"""

!pip install gspread
!pip install --upgrade oauth2client
import gspread
from oauth2client.service_account import ServiceAccountCredentials

scope = ['https://spreadsheets.google.com/feeds','https://www.googleapis.com/auth/drive']
cred_locate = ('python_tensor.json')
credentials = ServiceAccountCredentials.from_json_keyfile_name(cred_locate, scope)
gc = gspread.authorize(credentials)
print('Google AUTH Success')
os.remove("python_tensor.json")

"""# Data Load

## Google Sheets Load
"""

table_name = input('Γράψε tensorflow ή vpn --> ') ; worksheet = gc.open(table_name).sheet1 ; data = worksheet.get_all_values()

"""# Data Virtualization

## Panda Table
"""

!pip install pandas
import pandas as pd

print('--------------------------------------- '+str(table_name)+(' Table ------------------------------------------'))
#Data Virtualization
pd.DataFrame(data, columns=data[0])

"""# Conventors

## CSV Fuction
"""

def CSV_Convertor(data):
  df =  pd.DataFrame(data)
  filename=str(table_name)+'.csv'
  df.to_csv(filename, sep=',', header=0, index=None)
  print('Convert '+table_name+' table to CSV Template Complete....')
  return filename

CSV_Convertor(data)

"""## Excel Fuction"""

def Excel_Conventor(filename):
  read_file = pd.read_csv (filename)
  read_file.to_excel (filename+'.xlsx', index = None, header=True)
  print('Convert '+table_name+' table to Excel Template Complete....')

Excel_Conventor(table_name+'.csv')

"""# Google Sheets Commands

## Write to Sheets
"""

worksheet.update_acell('H4', "I just wrote to a spreadsheet using Python!")

"""## Find One Vaule With "CA""""

single_cell = worksheet.find("CA")
print(single_cell)

"""## Find All Cells With Vaule "Math""""

multi_cell = worksheet.findall("Math")
print(multi_cell)

"""## Take All Row With Vaule 'Math'"""

for item in multi_cell:
  value = item.value
  row_number = worksheet.row_values(item.row)
  column_number = item.col
  print(value)
  print(row_number)
  print(column_number)

s=worksheet.range('G1:G101')
for i in s :
  if s[12]:
    worksheet.update_acell('H4', "I just wrote to a spreadsheet using Python!")

print(s)

